{
  "openapi": "3.0.3",
  "info": {
    "title": "tdproto",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://web.tada.team"
    }
  ],
  "paths": {
    "/api/v4/addr": {
      "get": {
        "description": "Returns client address for debuging purposes.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/api/v4/ping": {
      "get": {
        "description": "Ping the server.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/api/v4/teams": {
      "get": {
        "description": "Get the list of teams on the server.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get team info.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update team settings.\nMust have admin rights.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete the team.\nMust have admin rights.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/chats": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get the list of chats in the team.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Chat"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/chats/{chat_id}": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "chat_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get the chat information.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Chat"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Change chat settings.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Chat"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Chat"
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/chats/{chat_id}/messages": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "chat_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "chat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chat_type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "has_upload",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "important",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gentime_from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exact",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unread",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "old_from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "new_from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "old_from_inc",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "new_from_inc",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "around",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "description": "Send text message to chat.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {}
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/chats/{chat_id}/messages/{message_id}": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "chat_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "message_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Edit message.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Message"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete message.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/chats/{contact_id}/messages": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "contact_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Send text message to direct chat.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {}
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/chats/{contact_id}/messages/{message_id}": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "contact_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "message_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Edit message in direct chat.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Message"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete message in direct chat.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/contacts": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get the list of contacts of the team.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/contacts/{contact_id}": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "contact_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get contact details.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Contact"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Update contact details.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Contact"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove contact from the team.\nMust have admin rights.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Contact"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/groups": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get all groups in the team.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Chat"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete the group.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/groups/{group_id}/members": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "group_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get the list of group members.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupMembership"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/groups/{group_id}/members/{contact_id}": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "contact_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "group_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "description": "Remove member from the group.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/GroupMembership"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{team_id}/tasks": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Create new task",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Task"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        }
      }
    },
    "/features.json": {
      "get": {
        "description": "Get the server features information.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "result": {
                      "$ref": "#/components/schemas/Features"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {}
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ActiveUserDailyStat": {
        "type": "object",
        "properties": {
          "call_seconds_total": {
            "type": "integer"
          },
          "calls_count": {
            "type": "integer"
          },
          "day": {
            "type": "string"
          },
          "family_name": {
            "type": "string"
          },
          "given_name": {
            "type": "string"
          },
          "messages_count": {
            "type": "integer"
          },
          "patronymic": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "user_id": {
            "type": "integer"
          }
        },
        "required": [
          "day",
          "user_id"
        ]
      },
      "ActiveUserDailyStatList": {},
      "AnyEvent": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          }
        },
        "required": [
          "event"
        ]
      },
      "BaseEvent": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          }
        },
        "required": [
          "event"
        ]
      },
      "ButtonColors": {
        "type": "object",
        "properties": {
          "brand_active": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Brand active color"
          },
          "brand_disable": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Brand disable color"
          },
          "brand_static": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Brand static color"
          },
          "simple_active": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Simple active color"
          },
          "simple_disable": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Simple disable color"
          },
          "simple_static": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Simple static color"
          }
        },
        "required": [
          "brand_static",
          "brand_active",
          "brand_disable",
          "simple_static",
          "simple_active",
          "simple_disable"
        ],
        "description": "Button colors for app"
      },
      "CallDevice": {
        "type": "object",
        "properties": {
          "muted": {
            "type": "boolean",
            "description": "Device muted"
          },
          "useragent": {
            "type": "string",
            "description": "Device description"
          }
        },
        "required": [
          "muted",
          "useragent"
        ],
        "description": "Call participant device"
      },
      "CallEvent": {
        "type": "object",
        "properties": {
          "audiorecord": {
            "type": "boolean",
            "description": "Call record enabled"
          },
          "buzz": {
            "type": "boolean",
            "description": "Call buzzing"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date, iso datetime"
          },
          "finish": {
            "type": "string",
            "format": "date-time",
            "description": "Call finish"
          },
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Version"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "onliners": {
            "$ref": "#/components/schemas/CallOnliner",
            "description": "Call participants"
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "Call start. For direct calls can be empty when buzzing"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Deprecated: use gentime or created"
          },
          "uid": {
            "type": "string",
            "description": "Call id"
          }
        },
        "required": [
          "jid",
          "uid",
          "created",
          "audiorecord",
          "gentime",
          "timestamp"
        ],
        "description": "Call information"
      },
      "CallOnliner": {
        "type": "object",
        "properties": {
          "devices": {
            "$ref": "#/components/schemas/CallDevice",
            "description": "Member devices, strictly one for now"
          },
          "display_name": {
            "type": "string",
            "description": "Contact name"
          },
          "icon": {
            "type": "string",
            "description": "Contact icon"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Contact id"
          },
          "muted": {
            "type": "boolean",
            "description": "Microphone muted. Computed from devices muted states"
          },
          "role": {
            "type": "string",
            "description": "Contact role"
          }
        },
        "required": [
          "jid",
          "display_name",
          "role",
          "icon",
          "muted",
          "devices"
        ],
        "description": "Call participant"
      },
      "Chat": {
        "type": "object",
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/JID",
            "description": "Assignee contact id. Tasks only"
          },
          "autocleanup_age": {
            "type": "integer",
            "description": "Delete messages in this chat in seconds. Experimental function"
          },
          "base_gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Base fields (not related to concrete participant) version"
          },
          "can_add_member": {
            "type": "boolean",
            "description": "Can I add member to this group chat"
          },
          "can_call": {
            "type": "boolean",
            "description": "Can I call to this chat"
          },
          "can_change_member_status": {
            "type": "boolean",
            "description": "Can I change member status in this group chat"
          },
          "can_change_settings": {
            "type": "boolean",
            "description": "deprecated: use changeable fields"
          },
          "can_delete": {
            "type": "boolean",
            "description": "Can I delete this chat"
          },
          "can_delete_any_message": {
            "type": "boolean",
            "description": "Can I delete any message in this chat"
          },
          "can_join": {
            "type": "boolean",
            "description": "Can I join to this public group/task"
          },
          "can_remove_member": {
            "type": "boolean",
            "description": "Can I remove member from this group chat"
          },
          "can_send_message": {
            "type": "boolean",
            "description": "Can I send message to this chat"
          },
          "can_set_important_any_message": {
            "type": "boolean",
            "description": "Can I change Important flag in any message in this chat"
          },
          "cant_send_message_reason": {
            "type": "string",
            "description": "Why I can't send message to this chat (if can't)"
          },
          "changeable_fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of editable fields"
          },
          "chat_type": {
            "$ref": "#/components/schemas/ChatType",
            "description": "Chat type"
          },
          "collapsed": {
            "type": "boolean",
            "description": "Description collapsed. Used for tasks only"
          },
          "color_index": {
            "type": "integer",
            "description": "Custom color index from table of colors. Tasks only"
          },
          "complexity": {
            "type": "integer",
            "description": "Task complexity, number"
          },
          "counters_enabled": {
            "type": "boolean",
            "description": "Include unread messages to counters"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date, iso datetime"
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "description": "Task deadline in iso format, if any"
          },
          "deadline_expired": {
            "type": "boolean",
            "description": "Is task deadline expired"
          },
          "default_for_all": {
            "type": "boolean",
            "description": "Any new team member will be added to this group chat"
          },
          "description": {
            "type": "string",
            "description": "Group or task description"
          },
          "display_name": {
            "type": "string",
            "description": "Title"
          },
          "done": {
            "type": "string",
            "format": "date-time",
            "description": "Task done date in iso format, if any"
          },
          "done_reason": {
            "type": "string",
            "description": "Task done reason, if any"
          },
          "draft": {
            "type": "string",
            "description": "Last message draft, if any"
          },
          "draft_num": {
            "type": "integer",
            "format": "int64",
            "description": "Last message draft version , if any"
          },
          "feed": {
            "type": "boolean",
            "description": "Present in feed (main screen)"
          },
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Chat fields related to concrete participant) version"
          },
          "hidden": {
            "type": "boolean",
            "description": "Hidden chat"
          },
          "icons": {
            "$ref": "#/components/schemas/IconData",
            "description": "Icons info"
          },
          "importance": {
            "type": "integer",
            "description": "Task importance, if available in team"
          },
          "items": {
            "$ref": "#/components/schemas/TaskItem",
            "description": "Checklist items. Task only"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Group/Task/Contact id"
          },
          "last_activity": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the last message sent even if it was deleted"
          },
          "last_message": {
            "$ref": "#/components/schemas/Message",
            "description": "Last message object"
          },
          "last_read_message_id": {
            "type": "string",
            "description": "Last read message id, if any"
          },
          "linked_messages": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Used for \"Create task from messages...\""
          },
          "links": {
            "$ref": "#/components/schemas/MessageLinks",
            "description": "Links in description"
          },
          "markup": {
            "$ref": "#/components/schemas/MarkupEntity",
            "description": "Markup entities for description field. Experimental"
          },
          "members": {
            "$ref": "#/components/schemas/GroupMembership",
            "description": "Group chat members"
          },
          "notifications_enabled": {
            "type": "boolean",
            "description": "Push notifications enabled"
          },
          "num": {
            "type": "integer",
            "description": "Task number in this team"
          },
          "num_checked_items": {
            "type": "integer",
            "description": "Checked items in checklist. Tasks only"
          },
          "num_importants": {
            "type": "integer",
            "description": "Number of important messages"
          },
          "num_items": {
            "type": "integer",
            "description": "Items in checklist. Tasks only"
          },
          "num_members": {
            "type": "integer",
            "description": "Non-archive participants number"
          },
          "num_unread": {
            "type": "integer",
            "description": "Unread counter"
          },
          "num_unread_notices": {
            "type": "integer",
            "description": "Mentions (@) counter"
          },
          "observers": {
            "$ref": "#/components/schemas/JID",
            "description": "Task followers id's. TODO: rename to \"followers\""
          },
          "owner": {
            "$ref": "#/components/schemas/JID",
            "description": "Task creator"
          },
          "parents": {
            "$ref": "#/components/schemas/Subtask",
            "description": "Parent tasks"
          },
          "pinned": {
            "type": "boolean",
            "description": "Is chat pinned on top"
          },
          "pinned_message": {
            "$ref": "#/components/schemas/Message",
            "description": "Pinned message for this chat"
          },
          "pinned_sort_ordering": {
            "type": "integer",
            "description": "Sort ordering for pinned chat"
          },
          "public": {
            "type": "boolean",
            "description": "Can other team member see this task/group chat"
          },
          "readonly_for_members": {
            "type": "boolean",
            "description": "Readonly for non-admins group chat (Like Channels in Telegram but switchable)"
          },
          "section": {
            "type": "string",
            "description": "Project / section id, if any"
          },
          "spent_time": {
            "type": "integer",
            "description": "Task spent time, number"
          },
          "status": {
            "$ref": "#/components/schemas/GroupStatus",
            "description": "My status in group chat"
          },
          "tabs": {
            "$ref": "#/components/schemas/TaskTabKey",
            "description": "Tab names"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Task tags list, if any"
          },
          "task_status": {
            "type": "string",
            "description": "Task status. May be custom"
          },
          "title": {
            "type": "string",
            "description": "Task title. Generated from number and description"
          },
          "uploads": {
            "$ref": "#/components/schemas/Upload",
            "description": "Upload uids for request, upload objects for response"
          },
          "urgency": {
            "type": "integer",
            "description": "Task urgency, if available in team"
          }
        },
        "required": [
          "jid",
          "chat_type",
          "gentime",
          "created",
          "display_name",
          "icons"
        ],
        "description": "Chat (direct, group, task) representation"
      },
      "ChatCounters": {
        "type": "object",
        "properties": {
          "chat_type": {
            "$ref": "#/components/schemas/ChatType"
          },
          "gentime": {
            "type": "integer",
            "format": "int64"
          },
          "jid": {
            "$ref": "#/components/schemas/JID"
          },
          "last_activity": {
            "type": "string",
            "format": "date-time"
          },
          "last_read_message_id": {
            "type": "string"
          },
          "num_unread": {
            "type": "integer"
          },
          "num_unread_notices": {
            "type": "integer"
          }
        },
        "required": [
          "jid",
          "chat_type",
          "gentime",
          "num_unread",
          "num_unread_notices",
          "last_read_message_id"
        ]
      },
      "ChatMessages": {
        "type": "object",
        "properties": {
          "messages": {
            "$ref": "#/components/schemas/Message"
          }
        },
        "required": [
          "messages"
        ]
      },
      "ChatShort": {
        "type": "object",
        "properties": {
          "chat_type": {
            "$ref": "#/components/schemas/ChatType",
            "description": "Chat type"
          },
          "display_name": {
            "type": "string",
            "description": "Title"
          },
          "icons": {
            "$ref": "#/components/schemas/IconData",
            "description": "Icon data"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Group/Task/Contact id"
          }
        },
        "required": [
          "jid",
          "chat_type",
          "display_name",
          "icons"
        ],
        "description": "Minimal chat representation"
      },
      "ChatType": {
        "type": "string"
      },
      "ClientActivity": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientActivityParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Change AFK (away from keyboard) status"
      },
      "ClientCallBuzzCancel": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientCallBuzzCancelParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Call buzzing cancelled"
      },
      "ClientCallLeave": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientCallLeaveParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Leave call"
      },
      "ClientCallMuteAll": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientCallMuteAllParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Mute all other call participants"
      },
      "ClientCallOffer": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientCallOfferParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Start a call"
      },
      "ClientCallReject": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientCallRejectParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Reject the call"
      },
      "ClientCallSound": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientCallSoundParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Change mute state in call"
      },
      "ClientCallTrickle": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientCallTrickleParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Send trickle candidate for webrtc connection"
      },
      "ClientChatComposing": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientChatComposingParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Typing or recording audiomessage"
      },
      "ClientChatLastread": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientChatLastreadParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Last read message in chat changed"
      },
      "ClientConfirm": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientConfirmParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Client confirmed server message"
      },
      "ClientMessageDeleted": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/clientMessageDeletedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Message deleted"
      },
      "ClientMessageUpdated": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/ClientMessageUpdatedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Message created or changed"
      },
      "ClientMessageUpdatedParams": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Deprecated"
          },
          "content": {
            "$ref": "#/components/schemas/MessageContent",
            "description": "Message content. Required"
          },
          "important": {
            "type": "boolean",
            "description": "Important flag. Not required. Default: false"
          },
          "linked_messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Forwarded messages (previously was for reply too). Not required"
          },
          "message_id": {
            "type": "string",
            "description": "Uid created by client. Recommended"
          },
          "nopreview": {
            "type": "boolean",
            "description": "Disable links preview generation. Not required. Default: false"
          },
          "old_style_attachment": {
            "type": "boolean",
            "description": "Backward compatibility mode"
          },
          "reply_to": {
            "type": "string",
            "description": "Replied to message id. Not required"
          },
          "to": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat, task or contact jid. Required"
          },
          "uploads": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Message attachments"
          }
        },
        "required": [
          "to",
          "content"
        ]
      },
      "ClientPing": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          }
        },
        "required": [
          "event"
        ],
        "description": "Empty message for checking server connection"
      },
      "ColorRule": {
        "type": "object",
        "properties": {
          "color_index": {
            "type": "integer",
            "description": "Color index"
          },
          "description": {
            "type": "string",
            "description": "Rule description"
          },
          "priority": {
            "type": "integer",
            "description": "Rule priority"
          },
          "section": {
            "type": "string",
            "description": "Project id if project filter enabled"
          },
          "section_enabled": {
            "type": "boolean",
            "description": "Project filter enabled"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tag ids if tags filter enabled"
          },
          "tags_enabled": {
            "type": "boolean",
            "description": "Tags filter enabled"
          },
          "task_importance": {
            "type": "integer",
            "description": "Task importance if task importance filter enabled"
          },
          "task_importance_enabled": {
            "type": "boolean",
            "description": "Task importance filter enabled"
          },
          "task_status": {
            "type": "string",
            "description": "Task status"
          },
          "task_urgency": {
            "type": "integer",
            "description": "Task urgency if task urgency filter enabled"
          },
          "task_urgency_enabled": {
            "type": "boolean",
            "description": "Task urgency filter enabled"
          },
          "uid": {
            "type": "string",
            "description": "Rule id"
          }
        },
        "required": [
          "uid",
          "priority",
          "color_index"
        ],
        "description": "Set of rules to apply to tasks for coloring"
      },
      "Contact": {
        "type": "object",
        "properties": {
          "add_to_team_rights": {
            "type": "boolean",
            "description": "Can contact add users to this team"
          },
          "alt_send": {
            "type": "boolean",
            "description": "Use Ctrl/Cmd + Enter instead Enter"
          },
          "always_send_pushes": {
            "type": "boolean",
            "description": "Send push notifications even contact is online"
          },
          "asterisk_mention": {
            "type": "boolean",
            "description": "Use * as @ for mentions"
          },
          "auth_2fa_enabled": {
            "type": "boolean",
            "description": "Two-factor authentication is configured and confirmed"
          },
          "auth_2fa_status": {
            "type": "string",
            "description": "Two-factor authentication status"
          },
          "botname": {
            "type": "string",
            "description": "Bot name. Empty for users"
          },
          "can_add_to_group": {
            "type": "boolean",
            "description": "Can I add this contact to group chats"
          },
          "can_add_to_team": {
            "type": "boolean",
            "description": "Can I add new members to this team"
          },
          "can_call": {
            "type": "boolean",
            "description": "Can I call to this contact"
          },
          "can_create_group": {
            "type": "boolean",
            "description": "Can I create group chats in this team"
          },
          "can_create_task": {
            "type": "boolean",
            "description": "Can I call create task for this contact"
          },
          "can_delete": {
            "type": "boolean",
            "description": "Can I remove this contact from team"
          },
          "can_delete_any_message": {
            "type": "boolean",
            "description": "Deprecated: use CanDeleteAnyMessage in chat object"
          },
          "can_join_public_groups": {
            "type": "boolean",
            "description": "Can I view/join public group in this team"
          },
          "can_join_public_tasks": {
            "type": "boolean",
            "description": "Can I view/join public tasks in this team"
          },
          "can_manage_color_rules": {
            "type": "boolean",
            "description": "Can I manage color rules in this team"
          },
          "can_manage_integrations": {
            "type": "boolean",
            "description": "Can I manage integrations in this team"
          },
          "can_manage_sections": {
            "type": "boolean",
            "description": "Can I manage sections in this team"
          },
          "can_manage_tags": {
            "type": "boolean",
            "description": "Can I manage tags in this team"
          },
          "can_send_message": {
            "type": "boolean",
            "description": "Can I send message to this contact"
          },
          "cant_send_message_reason": {
            "type": "string",
            "description": "Why I can't send message to this chat (if can't)"
          },
          "changeable_fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Changeable fields"
          },
          "contact_email": {
            "type": "string",
            "description": "Contact email in this team"
          },
          "contact_mshort_view": {
            "type": "boolean",
            "description": "Short view in contact list in mobile app"
          },
          "contact_phone": {
            "type": "string",
            "description": "Contact phone in this team"
          },
          "contact_short_view": {
            "type": "boolean",
            "description": "Short view in contact list"
          },
          "contact_show_archived": {
            "type": "boolean",
            "description": "Show archived contacts in contact list"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/ContactCustomFields",
            "description": "Extra contact fields"
          },
          "debug_show_activity": {
            "type": "boolean",
            "description": "Enable debug messages in UI"
          },
          "default_lang": {
            "type": "string",
            "description": "Default language code"
          },
          "display_name": {
            "type": "string",
            "description": "Full name in chats"
          },
          "dropall_enabled": {
            "type": "boolean",
            "description": "Enable remove all messages experimental features"
          },
          "family_name": {
            "type": "string",
            "description": "Family name"
          },
          "given_name": {
            "type": "string",
            "description": "Given name"
          },
          "group_mshort_view": {
            "type": "boolean",
            "description": "Short view in group list in mobile app"
          },
          "group_notifications_enabled": {
            "type": "boolean",
            "description": "Push notifications for group chats"
          },
          "group_short_view": {
            "type": "boolean",
            "description": "Short view in group list"
          },
          "icons": {
            "$ref": "#/components/schemas/IconData",
            "description": "Icons data"
          },
          "is_archive": {
            "type": "boolean",
            "description": "Contact deleted"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Contact Id"
          },
          "last_activity": {
            "type": "string",
            "format": "date-time",
            "description": "Last activity in this team (iso datetime)"
          },
          "mood": {
            "type": "string",
            "description": "Mood in this team"
          },
          "munread_first": {
            "type": "boolean",
            "description": "Show unread chats first in feed in mobile app"
          },
          "patronymic": {
            "type": "string",
            "description": "Patronymic, if any"
          },
          "quiet_time_finish": {
            "type": "string",
            "description": "Quiet time finish"
          },
          "quiet_time_start": {
            "type": "string",
            "description": "Quiet time start"
          },
          "role": {
            "type": "string",
            "description": "Role in this team"
          },
          "sections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Section ids"
          },
          "short_name": {
            "type": "string",
            "description": "Short name in chats"
          },
          "status": {
            "$ref": "#/components/schemas/TeamStatus",
            "description": "Status in this team"
          },
          "task_mshort_view": {
            "type": "boolean",
            "description": "Short view in task list in mobile app"
          },
          "task_notifications_enabled": {
            "type": "boolean",
            "description": "Push notifications for task chats"
          },
          "task_short_view": {
            "type": "boolean",
            "description": "Short view in task list"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone, if any"
          },
          "unread_first": {
            "type": "boolean",
            "description": "Show unread chats first in feed"
          }
        },
        "required": [
          "jid",
          "display_name",
          "short_name",
          "contact_email",
          "contact_phone",
          "icons",
          "role",
          "status",
          "sections"
        ],
        "description": "Contact"
      },
      "ContactCustomFields": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "description": "Company"
          },
          "department": {
            "type": "string",
            "description": "Department"
          },
          "mobile_phone": {
            "type": "string",
            "description": "MobilePhone"
          },
          "source": {
            "type": "string",
            "description": "Import source"
          },
          "title": {
            "type": "string",
            "description": "Title"
          }
        },
        "description": "Extra contact fields"
      },
      "ContactPreview": {
        "type": "object",
        "properties": {
          "_error": {
            "type": "string"
          },
          "family_name": {
            "type": "string"
          },
          "given_name": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "section": {
            "type": "string"
          }
        },
        "required": [
          "phone",
          "given_name",
          "family_name",
          "role",
          "section"
        ]
      },
      "ContactShort": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string",
            "description": "Full name in chats"
          },
          "icons": {
            "$ref": "#/components/schemas/IconData",
            "description": "Icons data"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Contact Id"
          },
          "short_name": {
            "type": "string",
            "description": "Short name in chats"
          }
        },
        "required": [
          "jid",
          "display_name",
          "short_name",
          "icons"
        ],
        "description": "Short contact representation"
      },
      "Country": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Phone code"
          },
          "default": {
            "type": "boolean",
            "description": "Selected by default"
          },
          "iso": {
            "type": "string",
            "description": "Country ISO code"
          },
          "name": {
            "type": "string",
            "description": "Country name"
          },
          "popular": {
            "type": "boolean",
            "description": "Is popular, need to cache"
          }
        },
        "required": [
          "code",
          "iso",
          "name"
        ],
        "description": "Country for phone numbers selection on login screen"
      },
      "DeletedChat": {
        "type": "object",
        "properties": {
          "chat_type": {
            "$ref": "#/components/schemas/ChatType",
            "description": "Chat type"
          },
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Chat fields (related to concrete participant) version"
          },
          "is_archive": {
            "type": "boolean",
            "description": "Archive flag. Always true for this structure"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Group/Task/Contact id"
          }
        },
        "required": [
          "jid",
          "chat_type",
          "gentime",
          "is_archive"
        ],
        "description": "Minimal chat representation for deletion"
      },
      "DeletedRemind": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Remind id"
          }
        },
        "required": [
          "uid"
        ],
        "description": "Remind deleted message"
      },
      "DeletedSection": {
        "type": "object",
        "properties": {
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Object version"
          },
          "uid": {
            "type": "string",
            "description": "Section uid"
          }
        },
        "required": [
          "uid",
          "gentime"
        ],
        "description": "Deleted task project or contact section"
      },
      "DeletedTag": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Tag id"
          }
        },
        "required": [
          "uid"
        ],
        "description": "Delete tag message"
      },
      "DeletedTeam": {
        "type": "object",
        "properties": {
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Object version"
          },
          "is_archive": {
            "type": "boolean",
            "description": "Team deleted"
          },
          "uid": {
            "type": "string",
            "description": "Team id"
          }
        },
        "required": [
          "uid",
          "is_archive",
          "gentime"
        ],
        "description": "Team deletion message. Readonly"
      },
      "Dist": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "url"
        ]
      },
      "Emoji": {
        "type": "object",
        "properties": {
          "char": {
            "type": "string",
            "description": "Unicode symbol"
          },
          "key": {
            "type": "string",
            "description": "Text representation"
          }
        },
        "required": [
          "char",
          "key"
        ],
        "description": "Emoji"
      },
      "Features": {
        "type": "object",
        "properties": {
          "afk_age": {
            "type": "integer",
            "description": "Max inactivity seconds"
          },
          "allow_admin_mute": {
            "type": "boolean",
            "description": "Wiki pages in chats. Experimental"
          },
          "android_app": {
            "type": "string",
            "description": "Link to Google Play"
          },
          "app_login_background": {
            "type": "string",
            "description": "AppBackground image url, if any"
          },
          "app_schemes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Local applications urls"
          },
          "app_title": {
            "type": "string",
            "description": "Application title"
          },
          "auth_2fa": {
            "type": "boolean",
            "description": "Two-factor authentication (2FA) enabled"
          },
          "auth_by_password": {
            "type": "boolean",
            "description": "Password authentication enabled"
          },
          "auth_by_qr_code": {
            "type": "boolean",
            "description": "QR-code / link authentication enabled"
          },
          "auth_by_sms": {
            "type": "boolean",
            "description": "SMS authentication enabled"
          },
          "build": {
            "type": "string",
            "description": "Build/revision of server side"
          },
          "calls": {
            "type": "boolean",
            "description": "Calls functions enabled"
          },
          "calls_record": {
            "type": "boolean",
            "description": "Calls record enabled"
          },
          "custom_server": {
            "type": "boolean",
            "description": "True for premise installation"
          },
          "default_wallpaper": {
            "$ref": "#/components/schemas/Wallpaper",
            "description": "Default wallpaper url for mobile apps, if any"
          },
          "desktop_version": {
            "type": "string",
            "description": "Desktop application version"
          },
          "firebase_api_key": {
            "type": "string",
            "description": "Firebase settings for web-push notifications"
          },
          "firebase_app_id": {
            "type": "string",
            "description": "Firebase settings for web-push notifications"
          },
          "firebase_auth_domain": {
            "type": "string",
            "description": "Firebase settings for web-push notifications"
          },
          "firebase_database_url": {
            "type": "string",
            "description": "Firebase settings for web-push notifications"
          },
          "firebase_project_id": {
            "type": "string",
            "description": "Firebase settings for web-push notifications"
          },
          "firebase_sender_id": {
            "type": "string",
            "description": "Firebase settings for web-push notifications"
          },
          "firebase_storage_bucket": {
            "type": "string",
            "description": "Firebase settings for web-push notifications"
          },
          "free_registration": {
            "type": "boolean",
            "description": "Free registration allowed"
          },
          "front_version": {
            "type": "string",
            "description": "Webclient version"
          },
          "host": {
            "type": "string",
            "description": "Current host"
          },
          "ice_servers": {
            "$ref": "#/components/schemas/ICEServer",
            "description": "ICE servers for WebRTC"
          },
          "installation_title": {
            "type": "string",
            "description": "Installation title, used on login screen"
          },
          "installation_type": {
            "type": "string",
            "description": "Name of installation"
          },
          "ios_app": {
            "type": "string",
            "description": "Link to AppStore"
          },
          "is_testing": {
            "type": "boolean",
            "description": "Testing installation"
          },
          "landing_url": {
            "type": "string",
            "description": "Landing page address, if any"
          },
          "max_color_rule_description_length": {
            "type": "integer",
            "description": "Maximum length for ColorRule description"
          },
          "max_group_title_length": {
            "type": "integer",
            "description": "Maximum chars for group chat name"
          },
          "max_integration_comment_length": {
            "type": "integer",
            "description": "Maximum length for Integration comment"
          },
          "max_linked_messages": {
            "type": "integer",
            "description": "Maximum number of forwarded messages"
          },
          "max_message_length": {
            "type": "integer",
            "description": "Maximum chars for text message"
          },
          "max_message_search_limit": {
            "type": "integer",
            "description": "Maximum search result"
          },
          "max_message_uploads": {
            "type": "integer",
            "description": "Maximum number of message uploads"
          },
          "max_mood_length": {
            "type": "integer",
            "description": "Maximum chars for mood in team"
          },
          "max_participants_per_call": {
            "type": "integer",
            "description": "Maximum number of participants per call"
          },
          "max_role_length": {
            "type": "integer",
            "description": "Maximum chars for role in team"
          },
          "max_section_length": {
            "type": "integer",
            "description": "Maximum length for project and contact's sections names"
          },
          "max_tag_length": {
            "type": "integer",
            "description": "Maximum length for tags"
          },
          "max_task_title_length": {
            "type": "integer",
            "description": "Maximum length for task title"
          },
          "max_teams": {
            "type": "integer",
            "description": "Maximum teams for one account"
          },
          "max_upload_mb": {
            "type": "integer",
            "description": "Maximum size of user's upload"
          },
          "max_url_length": {
            "type": "integer",
            "description": "Maximum length for urls"
          },
          "max_username_part_length": {
            "type": "integer",
            "description": "Maximum chars for: family_name, given_name, patronymic if any"
          },
          "message_uploads": {
            "type": "boolean",
            "description": "Multiple message uploads"
          },
          "metrika": {
            "type": "string",
            "description": "Yandex metrika counter id"
          },
          "min_app_version": {
            "type": "string",
            "description": "Minimal application version required for this server. Used for breaking changes"
          },
          "min_search_length": {
            "type": "integer",
            "description": "Minimal chars number for starting global search"
          },
          "mobile_calls": {
            "type": "boolean",
            "description": "Calls functions enabled for mobile applications"
          },
          "oauth_services": {
            "$ref": "#/components/schemas/OAuthService",
            "description": "External services"
          },
          "only_one_device_per_call": {
            "type": "boolean",
            "description": "Disallow call from multiply devices. Experimental"
          },
          "readonly_groups": {
            "type": "boolean",
            "description": "Deprecated"
          },
          "resend_timeout": {
            "type": "integer",
            "description": "Resend message in n seconds if no confirmation from server given"
          },
          "safari_push_id": {
            "type": "string",
            "description": "Safari push id for web-push notifications"
          },
          "sentry_dsn_js": {
            "type": "string",
            "description": "Frontend sentry.io settings"
          },
          "server_drafts": {
            "type": "boolean",
            "description": "Message drafts saved on server"
          },
          "single_group_teams": {
            "type": "boolean",
            "description": "Cross team communication. Experimental"
          },
          "support_email": {
            "type": "string",
            "description": "Support email"
          },
          "task_checklist": {
            "type": "boolean",
            "description": "Deprecated"
          },
          "task_dashboard": {
            "type": "boolean",
            "description": "Deprecated"
          },
          "task_messages": {
            "type": "boolean",
            "description": "Deprecated"
          },
          "task_public": {
            "type": "boolean",
            "description": "Deprecated"
          },
          "task_tags": {
            "type": "boolean",
            "description": "Deprecated"
          },
          "terms": {
            "$ref": "#/components/schemas/Terms",
            "description": "Team entity naming. Experimental"
          },
          "theme": {
            "type": "string",
            "description": "Default UI theme"
          },
          "userver": {
            "type": "string",
            "description": "Static files server address"
          },
          "web_login_background": {
            "type": "string",
            "description": "WebBackground image url, if any"
          },
          "wiki_pages": {
            "type": "boolean",
            "description": "Wiki pages in chats. Experimental"
          }
        },
        "required": [
          "host",
          "build",
          "desktop_version",
          "front_version",
          "app_title",
          "app_schemes",
          "userver",
          "ios_app",
          "android_app",
          "theme",
          "min_app_version",
          "free_registration",
          "max_upload_mb",
          "max_linked_messages",
          "max_message_uploads",
          "max_username_part_length",
          "max_group_title_length",
          "max_role_length",
          "max_mood_length",
          "max_message_length",
          "max_section_length",
          "max_tag_length",
          "max_task_title_length",
          "max_color_rule_description_length",
          "max_url_length",
          "max_integration_comment_length",
          "max_teams",
          "max_message_search_limit",
          "afk_age",
          "ice_servers",
          "custom_server",
          "installation_type",
          "is_testing",
          "metrika",
          "min_search_length",
          "resend_timeout",
          "sentry_dsn_js",
          "server_drafts",
          "firebase_app_id",
          "firebase_sender_id",
          "firebase_api_key",
          "firebase_auth_domain",
          "firebase_database_url",
          "firebase_project_id",
          "firebase_storage_bucket",
          "calls",
          "mobile_calls",
          "calls_record",
          "safari_push_id",
          "message_uploads",
          "terms",
          "single_group_teams",
          "wiki_pages",
          "support_email",
          "task_checklist",
          "readonly_groups",
          "task_dashboard",
          "task_messages",
          "task_public",
          "task_tags"
        ],
        "description": "Server information. Readonly"
      },
      "FontColors": {
        "type": "object",
        "properties": {
          "brand_button": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Brand button color"
          },
          "bubble_received": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Bubble received color"
          },
          "bubble_sent": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Bubble sent color"
          },
          "simple_button": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Simple button color"
          },
          "sub": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Sub color"
          },
          "text": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Text color"
          },
          "title": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Title color"
          }
        },
        "required": [
          "text",
          "title",
          "sub",
          "brand_button",
          "simple_button",
          "bubble_sent",
          "bubble_received"
        ],
        "description": "Font colors for app"
      },
      "GroupAccessRequest": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "$ref": "#/components/schemas/JID"
          },
          "uid": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "created",
          "subject"
        ]
      },
      "GroupMembership": {
        "type": "object",
        "properties": {
          "can_remove": {
            "type": "boolean",
            "description": "Can I remove this member"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Contact id"
          },
          "status": {
            "$ref": "#/components/schemas/GroupStatus",
            "description": "Status in group"
          }
        },
        "required": [
          "jid",
          "status"
        ],
        "description": "Group chat membership status"
      },
      "GroupStatus": {
        "type": "string"
      },
      "ICEServer": {
        "type": "object",
        "properties": {
          "urls": {
            "type": "string",
            "description": "URls"
          }
        },
        "required": [
          "urls"
        ],
        "description": "Interactive Connectivity Establishment Server for WEB Rtc connection. Readonly"
      },
      "ISODateTimeString": {
        "type": "string",
        "format": "date-time"
      },
      "IconColors": {
        "type": "object",
        "properties": {
          "brand": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Brand color"
          },
          "other": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Other color"
          },
          "title": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Title color"
          }
        },
        "required": [
          "title",
          "brand",
          "other"
        ],
        "description": "Icon colors for app"
      },
      "IconData": {
        "type": "object",
        "properties": {
          "blurhash": {
            "type": "string",
            "description": "Compact representation of a placeholder for an image (experimental)"
          },
          "color": {
            "type": "string",
            "description": "Icon background color (only for stub icon)"
          },
          "letters": {
            "type": "string",
            "description": "Letters (only for stub icon)"
          },
          "lg": {
            "$ref": "#/components/schemas/SingleIcon",
            "description": "Large image"
          },
          "sm": {
            "$ref": "#/components/schemas/SingleIcon",
            "description": "Small icon"
          },
          "stub": {
            "type": "string",
            "description": "Deprecated"
          }
        },
        "required": [
          "sm",
          "lg"
        ],
        "description": "Icon data. For icon generated from display name contains Letters + Color fields"
      },
      "InputColors": {
        "type": "object",
        "properties": {
          "active": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Active color"
          },
          "disable": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Disable color"
          },
          "error": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Error color"
          },
          "static": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Static color"
          }
        },
        "required": [
          "static",
          "active",
          "disable",
          "error"
        ],
        "description": "Input colors for app"
      },
      "Integration": {
        "type": "object",
        "properties": {
          "-": {
            "type": "string"
          },
          "comment": {
            "type": "string",
            "description": "Comment, if any"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Creation datetime, iso"
          },
          "enabled": {
            "type": "boolean",
            "description": "Integration enabled"
          },
          "form": {
            "$ref": "#/components/schemas/IntegrationForm",
            "description": "Integration form"
          },
          "group": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat id"
          },
          "help": {
            "type": "string",
            "description": "Full description"
          },
          "kind": {
            "type": "string",
            "description": "Unique integration name"
          },
          "uid": {
            "type": "string",
            "description": "Id"
          }
        },
        "required": [
          "comment",
          "enabled",
          "form",
          "group",
          "kind",
          "-"
        ],
        "description": "Integration for concrete chat"
      },
      "IntegrationField": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Label"
          },
          "readonly": {
            "type": "boolean",
            "description": "Is field readonly"
          },
          "value": {
            "type": "string",
            "description": "Current value"
          }
        },
        "required": [
          "label",
          "readonly",
          "value"
        ],
        "description": "Integration form field"
      },
      "IntegrationForm": {
        "type": "object",
        "properties": {
          "api_key": {
            "$ref": "#/components/schemas/IntegrationField",
            "description": "Api key field, if any"
          },
          "url": {
            "$ref": "#/components/schemas/IntegrationField",
            "description": "Url, if any"
          },
          "webhook_url": {
            "$ref": "#/components/schemas/IntegrationField",
            "description": "Webhook url, if any"
          }
        },
        "description": "Integration form"
      },
      "IntegrationKind": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Plugin description"
          },
          "icon": {
            "type": "string",
            "description": "Path to icon"
          },
          "kind": {
            "type": "string",
            "description": "Integration unique name"
          },
          "template": {
            "$ref": "#/components/schemas/Integration",
            "description": "Integration template"
          },
          "title": {
            "type": "string",
            "description": "Plugin title"
          }
        },
        "required": [
          "kind",
          "title",
          "template",
          "icon",
          "description"
        ],
        "description": "Integration kind"
      },
      "Integrations": {
        "type": "object",
        "properties": {
          "integrations": {
            "$ref": "#/components/schemas/Integration",
            "description": "Currently existing integrations"
          },
          "kinds": {
            "$ref": "#/components/schemas/IntegrationKind",
            "description": "Types of integrations available for setup"
          }
        },
        "required": [
          "integrations",
          "kinds"
        ],
        "description": "Complete integrations data, as received from server"
      },
      "Invitation": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "qr": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "token",
          "created",
          "qr"
        ]
      },
      "JID": {
        "type": "string"
      },
      "JSEP": {
        "type": "object",
        "properties": {
          "sdp": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "sdp",
          "type"
        ]
      },
      "MarkupEntity": {
        "type": "object",
        "properties": {
          "childs": {
            "$ref": "#/components/schemas/MarkupEntity",
            "description": "List of internal markup entities"
          },
          "cl": {
            "type": "integer",
            "description": "Close marker offset"
          },
          "cllen": {
            "type": "integer",
            "description": "Close marker length"
          },
          "op": {
            "type": "integer",
            "description": "Open marker offset"
          },
          "oplen": {
            "type": "integer",
            "description": "Open marker length"
          },
          "repl": {
            "type": "string",
            "description": "Text replacement"
          },
          "time": {
            "type": "string",
            "description": "Time, for Time type"
          },
          "typ": {
            "$ref": "#/components/schemas/MarkupType",
            "description": "Marker type"
          },
          "url": {
            "type": "string",
            "description": "Url, for Link type"
          }
        },
        "required": [
          "op",
          "cl",
          "typ"
        ],
        "description": "Markup entity. Experimental"
      },
      "MarkupType": {
        "type": "string"
      },
      "Mediasubtype": {
        "type": "string"
      },
      "Mediatype": {
        "type": "string"
      },
      "Message": {
        "type": "object",
        "properties": {
          "_debug": {
            "type": "string",
            "description": "Debug information, if any"
          },
          "chat": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat id"
          },
          "chat_type": {
            "$ref": "#/components/schemas/ChatType",
            "description": "Chat type"
          },
          "content": {
            "$ref": "#/components/schemas/MessageContent",
            "description": "Message content struct"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Message creation datetime (set by server side) or sending datetime in future for draft messages"
          },
          "drafted": {
            "type": "string",
            "format": "date-time",
            "description": "Creation datetime for draft messages"
          },
          "editable_until": {
            "type": "string",
            "format": "date-time",
            "description": "Author can change this message until date. Can be null"
          },
          "edited": {
            "type": "string",
            "format": "date-time",
            "description": "ISODateTimeString of message modification or deletion"
          },
          "from": {
            "$ref": "#/components/schemas/JID",
            "description": "Sender contact id"
          },
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Object version"
          },
          "has_previews": {
            "type": "boolean",
            "description": "Has link previews. True or null"
          },
          "important": {
            "type": "boolean",
            "description": "Importance flag"
          },
          "is_archive": {
            "type": "boolean",
            "description": "This message is archive. True or null"
          },
          "is_first": {
            "type": "boolean",
            "description": "This message is first in this chat. True or null"
          },
          "is_last": {
            "type": "boolean",
            "description": "This message is first in this chat. True or null"
          },
          "linked_messages": {
            "$ref": "#/components/schemas/Message",
            "description": "Forwarded messages. Can be null. Also contains double of ReplyTo for backward compatibility"
          },
          "links": {
            "$ref": "#/components/schemas/MessageLinks",
            "description": "External/internals links"
          },
          "markup": {
            "$ref": "#/components/schemas/MarkupEntity",
            "description": "Markup entities. Experimental"
          },
          "message_id": {
            "type": "string",
            "description": "Message uid"
          },
          "nopreview": {
            "type": "boolean",
            "description": "Disable link previews. True or null"
          },
          "notice": {
            "type": "boolean",
            "description": "Has mention (@). True or null"
          },
          "num": {
            "type": "integer",
            "description": "Index number of this message. Starts from 0. Null for deleted messages. Changes when any previous message wad deleted"
          },
          "num_received": {
            "type": "integer",
            "description": "Unused yet"
          },
          "prev": {
            "type": "string",
            "description": "Previous message id in this chat. Uid or null"
          },
          "push_text": {
            "type": "string",
            "description": "Simple plaintext message representation"
          },
          "reactions": {
            "$ref": "#/components/schemas/MessageReaction",
            "description": "Message reactions struct. Can be null"
          },
          "received": {
            "type": "boolean",
            "description": "Message was seen by anybody in chat. True or null"
          },
          "reply_to": {
            "$ref": "#/components/schemas/Message",
            "description": "Message that was replied to, if any"
          },
          "silently": {
            "type": "boolean",
            "description": "Message has no pushes and did not affect any counters"
          },
          "to": {
            "$ref": "#/components/schemas/JID",
            "description": "Recipient id (group, task or contact)"
          },
          "uploads": {
            "$ref": "#/components/schemas/Upload",
            "description": "Message uploads"
          }
        },
        "required": [
          "content",
          "from",
          "to",
          "message_id",
          "created",
          "gentime",
          "chat_type",
          "chat"
        ],
        "description": "Chat message"
      },
      "MessageColors": {
        "type": "object",
        "properties": {
          "allocated": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Allocated color"
          },
          "bubble_important": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Bubble important color"
          },
          "bubble_received": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Bubble received color"
          },
          "bubble_sent": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Bubble sent color"
          },
          "status_bubble": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Status bubble color"
          },
          "status_feed": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Status feed color"
          }
        },
        "required": [
          "bubble_sent",
          "bubble_received",
          "bubble_important",
          "status_feed",
          "status_bubble",
          "allocated"
        ],
        "description": "Message colors for app"
      },
      "MessageContent": {
        "type": "object",
        "properties": {
          "actor": {
            "$ref": "#/components/schemas/JID",
            "description": "Change actor contact id (for \"change\" mediatype)"
          },
          "animated": {
            "type": "boolean",
            "description": "Upload is animated image, if any. Deprecated: use Uploads instead"
          },
          "blurhash": {
            "type": "string",
            "description": "Compact representation of a placeholder for an image. Deprecated: use Uploads instead"
          },
          "comment": {
            "type": "string",
            "description": "Comment (for \"audiomsg\" mediatype)"
          },
          "duration": {
            "type": "integer",
            "description": "Upload duration, if any. Deprecated: use Uploads instead"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Emails list (for \"contact\" mediatype)"
          },
          "family_name": {
            "type": "string",
            "description": "Family name (for \"contact\" mediatype)"
          },
          "given_name": {
            "type": "string",
            "description": "Given name (for \"contact\" mediatype)"
          },
          "mediaURL": {
            "type": "string",
            "description": "Upload url, if any. Deprecated: use Uploads instead"
          },
          "name": {
            "type": "string",
            "description": "Upload name, if any. Deprecated: use Uploads instead"
          },
          "new": {
            "type": "string",
            "description": "Change new value (for \"change\" mediatype)"
          },
          "old": {
            "type": "string",
            "description": "Change old value (for \"change\" mediatype)"
          },
          "patronymic": {
            "type": "string",
            "description": "Patronymic name (for \"contact\" mediatype)"
          },
          "pdf_version": {
            "$ref": "#/components/schemas/PdfVersion",
            "description": "Pdf version, if any"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Contact phones list (for \"contact\" mediatype)"
          },
          "preview2xURL": {
            "type": "string",
            "description": "Upload high resolution preview absolute url, if any. Deprecated: use Uploads instead"
          },
          "previewHeight": {
            "type": "integer",
            "description": "Upload preview height, in pixels, if any. Deprecated: use Uploads instead"
          },
          "previewURL": {
            "type": "string",
            "description": "Upload preview absolute url, if any. Deprecated: use Uploads instead"
          },
          "previewWidth": {
            "type": "integer",
            "description": "Upload width, in pixels, if any. Deprecated: use Uploads instead"
          },
          "processing": {
            "type": "boolean",
            "description": "Upload still processing, if any. Deprecated: use Uploads instead"
          },
          "size": {
            "type": "integer",
            "description": "Upload size, if any. Deprecated: use Uploads instead"
          },
          "stickerpack": {
            "type": "string",
            "description": "Stickerpack name (for \"sticker\" subtype)"
          },
          "subtype": {
            "$ref": "#/components/schemas/Mediasubtype",
            "description": "Message subtype, if any"
          },
          "text": {
            "type": "string",
            "description": "Text representation of message"
          },
          "title": {
            "type": "string",
            "description": "Change title (for \"change\" mediatype)"
          },
          "type": {
            "$ref": "#/components/schemas/Mediatype",
            "description": "Message type"
          },
          "upload": {
            "type": "string",
            "description": "Upload id, if any. Deprecated: use Uploads instead"
          }
        },
        "required": [
          "text",
          "type"
        ],
        "description": "Chat message content"
      },
      "MessageLink": {
        "type": "object",
        "properties": {
          "nopreview": {
            "type": "boolean",
            "description": "Website previews disabled"
          },
          "pattern": {
            "type": "string",
            "description": "Text fragment that should be replaced by link"
          },
          "preview": {
            "$ref": "#/components/schemas/MessageLinkPreview",
            "description": "Optional preview info, for websites"
          },
          "text": {
            "type": "string",
            "description": "Text replacement"
          },
          "uploads": {
            "$ref": "#/components/schemas/Upload",
            "description": "Optional upload info"
          },
          "url": {
            "type": "string",
            "description": "Internal or external link"
          },
          "youtube_id": {
            "type": "string",
            "description": "Optional youtube movie id"
          }
        },
        "required": [
          "pattern",
          "url",
          "text"
        ],
        "description": "Checked message links. In short: \"Click here: {link.Pattern}\" =\u003e \"Click here: \u003ca href='{link.Url}'\u003e{link.Text}\u003c/a\u003e\""
      },
      "MessageLinkPreview": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Website description"
          },
          "title": {
            "type": "string",
            "description": "Website title or og:title content"
          }
        },
        "required": [
          "title"
        ],
        "description": "Website title and description"
      },
      "MessageLinks": {},
      "MessagePush": {
        "type": "object",
        "properties": {
          "chat": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat id"
          },
          "click_action": {
            "type": "string",
            "description": "Url opened on click"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Message creation iso datetime"
          },
          "icon_url": {
            "type": "string",
            "description": "Absolute url to push icon"
          },
          "message": {
            "type": "string",
            "description": "Push body"
          },
          "message_id": {
            "type": "string",
            "description": "Message id"
          },
          "sender": {
            "$ref": "#/components/schemas/JID",
            "description": "Sender contact id"
          },
          "subtitle": {
            "type": "string",
            "description": "Push subtitle"
          },
          "tag": {
            "type": "string",
            "description": "Push tag (for join pushes)"
          },
          "team": {
            "type": "string",
            "description": "Team uid"
          },
          "title": {
            "type": "string",
            "description": "Push title"
          }
        },
        "required": [
          "title",
          "subtitle",
          "message",
          "icon_url",
          "click_action",
          "tag",
          "team",
          "sender",
          "chat",
          "message_id",
          "created"
        ],
        "description": "Push message over websockets. Readonly"
      },
      "MessageReaction": {
        "type": "object",
        "properties": {
          "counter": {
            "type": "integer",
            "description": "Number of reactions"
          },
          "details": {
            "$ref": "#/components/schemas/MessageReactionDetail",
            "description": "Details"
          },
          "name": {
            "type": "string",
            "description": "Emoji"
          }
        },
        "required": [
          "name",
          "counter",
          "details"
        ],
        "description": "Message emoji reaction"
      },
      "MessageReactionDetail": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When reaction added, iso datetime"
          },
          "name": {
            "type": "string",
            "description": "Reaction emoji"
          },
          "sender": {
            "$ref": "#/components/schemas/JID",
            "description": "Reaction author"
          }
        },
        "required": [
          "created",
          "sender",
          "name"
        ],
        "description": "Message reaction detail"
      },
      "OAuthService": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Integration title"
          },
          "url": {
            "type": "string",
            "description": "Redirect url"
          }
        },
        "required": [
          "name",
          "url"
        ],
        "description": "OAuth service"
      },
      "OnlineCall": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "online_count": {
            "type": "integer",
            "description": "Number participants in call"
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "Call start"
          },
          "uid": {
            "type": "string",
            "description": "Call id"
          }
        },
        "required": [
          "jid",
          "uid"
        ],
        "description": "Active call status"
      },
      "OnlineContact": {
        "type": "object",
        "properties": {
          "afk": {
            "type": "boolean",
            "description": "Is away from keyboard"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Contact id"
          },
          "mobile": {
            "type": "boolean",
            "description": "Is mobile client"
          }
        },
        "required": [
          "jid",
          "mobile"
        ],
        "description": "Contact online status"
      },
      "PaginatedChats": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components/schemas/Contact"
          },
          "count": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "objects": {
            "$ref": "#/components/schemas/Chat"
          },
          "offset": {
            "type": "integer"
          }
        },
        "required": [
          "objects",
          "count",
          "limit",
          "offset"
        ]
      },
      "PaginatedContacts": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "objects": {
            "$ref": "#/components/schemas/Contact"
          },
          "offset": {
            "type": "integer"
          }
        },
        "required": [
          "objects",
          "count",
          "limit",
          "offset"
        ]
      },
      "PaginatedMessages": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "objects": {
            "$ref": "#/components/schemas/Message"
          },
          "offset": {
            "type": "integer"
          }
        },
        "required": [
          "objects",
          "count",
          "limit",
          "offset"
        ]
      },
      "PaginatedUploadShortMessages": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "objects": {
            "$ref": "#/components/schemas/UploadShortMessage"
          },
          "offset": {
            "type": "integer"
          }
        },
        "required": [
          "objects",
          "count",
          "limit",
          "offset"
        ]
      },
      "PdfVersion": {
        "type": "object",
        "properties": {
          "text_preview": {
            "type": "string",
            "description": "First string of text content"
          },
          "url": {
            "type": "string",
            "description": "Absolute url"
          }
        },
        "required": [
          "url"
        ],
        "description": "PDF preview of mediafile. Experimental"
      },
      "PushDevice": {
        "type": "object",
        "properties": {
          "allowed_notifications": {
            "type": "boolean"
          },
          "data_badges": {
            "type": "boolean"
          },
          "data_pushes": {
            "type": "boolean"
          },
          "device_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notification_token": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "voip_notification_token": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "device_id",
          "notification_token",
          "voip_notification_token",
          "allowed_notifications",
          "name",
          "data_pushes",
          "data_badges"
        ]
      },
      "PushDeviceType": {
        "type": "integer"
      },
      "RGBColor": {
        "type": "string"
      },
      "Reaction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unicode symbol"
          }
        },
        "required": [
          "name"
        ],
        "description": "Emoji reaction"
      },
      "ReceivedMessage": {
        "type": "object",
        "properties": {
          "_debug": {
            "type": "string",
            "description": "Debug message, if any"
          },
          "chat": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "message_id": {
            "type": "string",
            "description": "Message id"
          },
          "num_received": {
            "type": "integer",
            "description": "Number of contacts received this message. Experimental"
          },
          "received": {
            "type": "boolean",
            "description": "Is received"
          }
        },
        "required": [
          "chat",
          "message_id",
          "received"
        ],
        "description": "Message receiving status"
      },
      "Remind": {
        "type": "object",
        "properties": {
          "chat": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat id"
          },
          "comment": {
            "type": "string",
            "description": "Comment, if any"
          },
          "fire_at": {
            "type": "string",
            "format": "date-time",
            "description": "Activation time, iso"
          },
          "uid": {
            "type": "string",
            "description": "Remind id"
          }
        },
        "required": [
          "uid",
          "chat",
          "fire_at"
        ],
        "description": "Remind"
      },
      "Section": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description, if any"
          },
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Object version"
          },
          "is_archive": {
            "type": "boolean",
            "description": "Is deleted"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "sort_ordering": {
            "type": "integer",
            "description": "Sort ordering"
          },
          "uid": {
            "type": "string",
            "description": "Section uid"
          }
        },
        "required": [
          "uid",
          "sort_ordering",
          "name",
          "gentime"
        ],
        "description": "Task project or contact section"
      },
      "ServerCallAnswer": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverCallAnswerParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Call parameters"
      },
      "ServerCallBuzz": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverCallBuzzParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Call buzzing"
      },
      "ServerCallBuzzcancel": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverCallBuzzcancelParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Call cancelled on buzzing"
      },
      "ServerCallCheckFingerprint": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverCallCheckFingerprintParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Experimental function"
      },
      "ServerCallLeave": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverCallLeaveParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Participant leave a call"
      },
      "ServerCallMuteall": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverCallMuteallParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "All participants in call muted"
      },
      "ServerCallReject": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverCallRejectParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Call rejected"
      },
      "ServerCallRestart": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverCallRestartParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Call restarted"
      },
      "ServerCallSound": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/ServerCallSoundParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Mute/unmute call participant"
      },
      "ServerCallSoundParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "muted": {
            "type": "boolean",
            "description": "Mute state"
          }
        },
        "required": [
          "jid",
          "muted"
        ]
      },
      "ServerCallState": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/CallEvent"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Call information"
      },
      "ServerCallTalking": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverCallTalkingParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Someone talks in call"
      },
      "ServerChatComposing": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverChatComposingParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Someone typing or recording audiomessage in chat"
      },
      "ServerChatDeleted": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverChatDeletedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Chat deleted"
      },
      "ServerChatDraft": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverChatDraftParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Changed draft message in chan"
      },
      "ServerChatLastread": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverChatLastreadParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Changed last read message in chat"
      },
      "ServerChatUpdated": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverChatUpdatedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Chat created or updated"
      },
      "ServerConfirm": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverConfirmParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Server confirmed client message"
      },
      "ServerContactUpdated": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverContactUpdatedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Contact created or updated"
      },
      "ServerDebug": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverDebugParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Debug message"
      },
      "ServerLogin": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverLoginParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Login from other device"
      },
      "ServerMessagePush": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/MessagePush"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Push replacement for desktop application"
      },
      "ServerMessageReceived": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverMessageReceivedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Message received by someone in chat"
      },
      "ServerMessageUpdated": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverMessageUpdatedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Chat message created, updated or deleted"
      },
      "ServerOnline": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverOnlineParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Online team members and current active calls"
      },
      "ServerPanic": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverPanicParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Critical server error"
      },
      "ServerProcessing": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverProcessingParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Status of background operation"
      },
      "ServerRemindDeleted": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverRemindDeletedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Task or group remind deleted"
      },
      "ServerRemindFired": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverRemindFiredParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Task or group remind fired"
      },
      "ServerRemindUpdated": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverRemindUpdatedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Task/group remind created or changed"
      },
      "ServerSectionDeleted": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverSectionDeletedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Contact section or task project deleted"
      },
      "ServerSectionUpdated": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverSectionUpdatedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Contact section or task project created or changed"
      },
      "ServerTagDeleted": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverTagDeletedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Tag deleted"
      },
      "ServerTagUpdated": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverTagUpdatedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Tag created or changed"
      },
      "ServerTeamCounters": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverTeamCountersParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Counters form other teams"
      },
      "ServerTeamDeleted": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverTeamDeletedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Team archived"
      },
      "ServerTeamUpdated": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverTeamUpdatedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Team created or changed"
      },
      "ServerTime": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverTimeParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Current server time"
      },
      "ServerUiSettings": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/UiSettings"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Part of UI settings changed"
      },
      "ServerUploadUpdated": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverUploadUpdatedParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Upload object created or changed"
      },
      "ServerWarning": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/serverWarningParams"
          }
        },
        "required": [
          "params",
          "event"
        ],
        "description": "Something went wrong with client message"
      },
      "Session": {
        "type": "object",
        "properties": {
          "addr": {
            "type": "string",
            "description": "IP address"
          },
          "afk": {
            "type": "boolean",
            "description": "Away from keyboard"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Creation datetime"
          },
          "is_mobile": {
            "type": "boolean",
            "description": "Mobile"
          },
          "lang": {
            "type": "string",
            "description": "Language code"
          },
          "team": {
            "type": "string",
            "description": "Team id"
          },
          "uid": {
            "type": "string",
            "description": "Session id"
          },
          "useragent": {
            "type": "string",
            "description": "User agent"
          }
        },
        "required": [
          "uid",
          "created"
        ],
        "description": "Websocket session"
      },
      "ShortMessage": {
        "type": "object",
        "properties": {
          "chat": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat id"
          },
          "chat_type": {
            "$ref": "#/components/schemas/ChatType",
            "description": "Chat type"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Message creation datetime (set by server side) or sending datetime in future for draft messages"
          },
          "from": {
            "$ref": "#/components/schemas/JID",
            "description": "Sender contact id"
          },
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Object version"
          },
          "is_archive": {
            "type": "boolean",
            "description": "This message is archive. True or null"
          },
          "message_id": {
            "type": "string",
            "description": "Message uid"
          },
          "to": {
            "$ref": "#/components/schemas/JID",
            "description": "Recipient id (group, task or contact)"
          }
        },
        "required": [
          "from",
          "to",
          "message_id",
          "created",
          "gentime",
          "chat_type",
          "chat"
        ],
        "description": "Short message based on chat message"
      },
      "SimpleDailyIntStats": {
        "type": "object",
        "additionalProperties": {
          "type": "integer"
        }
      },
      "SingleIcon": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Icon height, in pixels"
          },
          "url": {
            "type": "string",
            "description": "absolute url to icon"
          },
          "width": {
            "type": "integer",
            "description": "Icon width, in pixels"
          }
        },
        "required": [
          "url",
          "width",
          "height"
        ],
        "description": "Small or large icon"
      },
      "Sticker": {
        "type": "object",
        "properties": {
          "icon100": {
            "type": "string"
          },
          "icon128": {
            "type": "string"
          },
          "icon200": {
            "type": "string"
          },
          "icon64": {
            "type": "string"
          },
          "message_content": {
            "$ref": "#/components/schemas/MessageContent"
          },
          "uid": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "icon64",
          "icon100",
          "icon128",
          "icon200",
          "message_content"
        ]
      },
      "Stickerpack": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string"
          },
          "author_link": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "stickers": {
            "$ref": "#/components/schemas/Sticker"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "name",
          "title",
          "stickers"
        ]
      },
      "Subtask": {
        "type": "object",
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/JID",
            "description": "Assignee contact id. Tasks only"
          },
          "display_name": {
            "type": "string",
            "description": "Title"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Task id"
          },
          "num": {
            "type": "integer",
            "description": "Task number in this team"
          },
          "public": {
            "type": "boolean",
            "description": "Can other team member see this task/group chat"
          },
          "title": {
            "type": "string",
            "description": "Task title. Generated from number and description"
          }
        },
        "required": [
          "jid",
          "assignee",
          "title",
          "num",
          "display_name"
        ],
        "description": "Link to sub/sup task"
      },
      "SwitcherColors": {
        "type": "object",
        "properties": {
          "off": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Off color"
          },
          "on": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "On color"
          }
        },
        "required": [
          "on",
          "off"
        ],
        "description": "Switcher colors for app"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tag name"
          },
          "uid": {
            "type": "string",
            "description": "Tag id"
          }
        },
        "required": [
          "uid",
          "name"
        ],
        "description": "Task tag"
      },
      "Task": {
        "type": "object",
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/JID",
            "description": "User who was assigned the task"
          },
          "complexity": {
            "type": "integer",
            "description": "Task complexity"
          },
          "custom_color_index": {
            "type": "integer",
            "description": "Custom task color"
          },
          "deadline": {
            "type": "string",
            "description": "Deadline time"
          },
          "description": {
            "type": "string",
            "description": "Task description"
          },
          "importance": {
            "type": "integer",
            "description": "Task importance"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Items of the task"
          },
          "linked_messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Linked messages"
          },
          "observers": {
            "$ref": "#/components/schemas/JID",
            "description": "User who follow the task"
          },
          "public": {
            "type": "boolean",
            "description": "Is task public"
          },
          "remind_at": {
            "type": "string",
            "description": "Fire a reminder at this time"
          },
          "section": {
            "type": "string",
            "description": "Task section UID"
          },
          "spent_time": {
            "type": "integer",
            "description": "Time spent"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Task tags"
          },
          "task_status": {
            "type": "string",
            "description": "Task status"
          },
          "uploads": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Task uploads"
          },
          "urgency": {
            "type": "integer",
            "description": "Task urgency"
          }
        },
        "description": "Task"
      },
      "TaskColor": {
        "type": "object",
        "properties": {
          "dark": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Dark color"
          },
          "light": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Light color"
          },
          "regular": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Regular color"
          }
        },
        "required": [
          "regular",
          "dark",
          "light"
        ],
        "description": "Task color rules color"
      },
      "TaskCounters": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Task jid"
          },
          "num_unread": {
            "type": "integer",
            "description": "Unreads counter"
          },
          "num_unread_notices": {
            "type": "integer",
            "description": "Mentions (@) counter"
          }
        },
        "required": [
          "jid"
        ],
        "description": "Tasks counters"
      },
      "TaskFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/TaskFilterKey",
            "description": "Task filter field"
          },
          "title": {
            "type": "string",
            "description": "Filter title"
          }
        },
        "required": [
          "field",
          "title"
        ],
        "description": "Task filter"
      },
      "TaskFilterKey": {
        "type": "string"
      },
      "TaskItem": {
        "type": "object",
        "properties": {
          "can_toggle": {
            "type": "boolean",
            "description": "Can I toggle this item"
          },
          "checked": {
            "type": "boolean",
            "description": "Item checked"
          },
          "sort_ordering": {
            "type": "integer",
            "description": "Sort ordering"
          },
          "subtask": {
            "$ref": "#/components/schemas/Subtask",
            "description": "Link to subtask. Optional"
          },
          "text": {
            "type": "string",
            "description": "Text or \"#{OtherTaskNumber}\""
          },
          "uid": {
            "type": "string",
            "description": "Id"
          }
        },
        "required": [
          "text"
        ],
        "description": "Task checklist item"
      },
      "TaskItems": {
        "type": "object",
        "properties": {
          "checked": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "checked"
        ]
      },
      "TaskPreview": {
        "type": "object",
        "properties": {
          "_error": {
            "type": "string"
          },
          "assignee": {
            "$ref": "#/components/schemas/JID"
          },
          "deadline": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "items": {
            "$ref": "#/components/schemas/TaskItems"
          },
          "public": {
            "type": "boolean"
          },
          "section": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "assignee",
          "deadline",
          "description",
          "section",
          "public",
          "tags",
          "items"
        ]
      },
      "TaskSort": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/TaskSortKey",
            "description": "Field"
          },
          "title": {
            "type": "string",
            "description": "Sort title"
          }
        },
        "required": [
          "key",
          "title"
        ],
        "description": "Task sort type"
      },
      "TaskSortKey": {
        "type": "string"
      },
      "TaskStatus": {
        "type": "object",
        "properties": {
          "is_archive": {
            "type": "boolean",
            "description": "Status not used anymore"
          },
          "name": {
            "type": "string",
            "description": "Status internal name"
          },
          "sort_ordering": {
            "type": "integer",
            "description": "Status sort ordering"
          },
          "title": {
            "type": "string",
            "description": "Status localized name"
          },
          "uid": {
            "type": "string",
            "description": "Status id"
          }
        },
        "required": [
          "sort_ordering",
          "name",
          "title"
        ],
        "description": "Custom task status"
      },
      "TaskTab": {
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/TaskFilter",
            "description": "Filters inside tab"
          },
          "hide_empty": {
            "type": "boolean",
            "description": "Disable this tab when it has no contents"
          },
          "key": {
            "$ref": "#/components/schemas/TaskTabKey",
            "description": "Tab name"
          },
          "pagination": {
            "type": "boolean",
            "description": "Enable pagination"
          },
          "show_counter": {
            "type": "boolean",
            "description": "Show unread badge"
          },
          "sort": {
            "$ref": "#/components/schemas/TaskSort",
            "description": "Sort available in tab"
          },
          "title": {
            "type": "string",
            "description": "Tab title"
          },
          "unread_tasks": {
            "$ref": "#/components/schemas/TaskCounters",
            "description": "Unread tasks with jid and counters"
          }
        },
        "required": [
          "key",
          "title",
          "hide_empty",
          "show_counter",
          "pagination",
          "filters",
          "sort",
          "unread_tasks"
        ],
        "description": "Task tab"
      },
      "TaskTabKey": {
        "type": "string"
      },
      "Team": {
        "type": "object",
        "properties": {
          "bad_profile": {
            "type": "boolean",
            "description": "My profile in this team isn't full"
          },
          "changeable_statuses": {
            "$ref": "#/components/schemas/TeamStatus",
            "description": "What status I can set to other team members"
          },
          "contacts": {
            "$ref": "#/components/schemas/Contact",
            "description": "Team contacts. Used only for team creation"
          },
          "default_task_deadline": {
            "type": "string",
            "description": "Default task deadline"
          },
          "display_family_name_first": {
            "type": "boolean",
            "description": "Family name should be first in display name"
          },
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Object version"
          },
          "hide_archived_users": {
            "type": "boolean",
            "description": "Don't show archived users by default"
          },
          "icons": {
            "$ref": "#/components/schemas/IconData",
            "description": "Team icons"
          },
          "is_archive": {
            "type": "boolean",
            "description": "Team deleted"
          },
          "last_active": {
            "type": "boolean",
            "description": "User last activity was in this team"
          },
          "max_message_update_age": {
            "type": "integer",
            "description": "Max message update/deletion age, in seconds"
          },
          "me": {
            "$ref": "#/components/schemas/Contact",
            "description": "My profile in this team"
          },
          "name": {
            "type": "string",
            "description": "Team name"
          },
          "need_confirmation": {
            "type": "boolean",
            "description": "Need confirmation after invite to this team"
          },
          "single_group": {
            "$ref": "#/components/schemas/JID",
            "description": "For single group teams, jid of chat"
          },
          "task_importance_max": {
            "type": "integer",
            "description": "Maximum value of task importance. Default is 5"
          },
          "task_importance_min": {
            "type": "integer",
            "description": "Minimal value of task importance. Default is 1"
          },
          "task_importance_rev": {
            "type": "boolean",
            "description": "Bigger number = bigger importance. Default: lower number = bigger importance"
          },
          "theme": {
            "$ref": "#/components/schemas/Theme",
            "description": "Color theme, if any"
          },
          "uid": {
            "type": "string",
            "description": "Team id"
          },
          "unread": {
            "$ref": "#/components/schemas/TeamUnread",
            "description": "Unread message counters"
          },
          "uploads_size": {
            "type": "integer",
            "format": "int64",
            "description": "Total uploads size, bytes"
          },
          "uploads_size_limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum uploads size, bytes, if any"
          },
          "use_patronymic": {
            "type": "boolean",
            "description": "Patronymic in usernames for this team"
          },
          "use_task_complexity": {
            "type": "boolean",
            "description": "Use complexity field in task"
          },
          "use_task_importance": {
            "type": "boolean",
            "description": "Use importance field in task"
          },
          "use_task_spent_time": {
            "type": "boolean",
            "description": "Use spent time field in task"
          },
          "use_task_urgency": {
            "type": "boolean",
            "description": "Use urgency field in task"
          },
          "user_fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Username fields ordering"
          }
        },
        "required": [
          "uid",
          "gentime",
          "name",
          "max_message_update_age",
          "icons",
          "last_active",
          "need_confirmation",
          "user_fields",
          "unread",
          "me"
        ],
        "description": "Team"
      },
      "TeamCounter": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Team id"
          },
          "unread": {
            "$ref": "#/components/schemas/TeamUnread",
            "description": "Unread message counters"
          }
        },
        "required": [
          "uid",
          "unread"
        ],
        "description": "Unread message counters"
      },
      "TeamShort": {
        "type": "object",
        "properties": {
          "icons": {
            "$ref": "#/components/schemas/IconData",
            "description": "Team icons"
          },
          "name": {
            "type": "string",
            "description": "Team name"
          },
          "uid": {
            "type": "string",
            "description": "Team id"
          }
        },
        "required": [
          "uid",
          "name",
          "icons"
        ],
        "description": "Short team representation. For invites, push notifications, etc. Readonly"
      },
      "TeamStatus": {
        "type": "string"
      },
      "TeamUnread": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Unread"
        }
      },
      "Terms": {
        "type": "object",
        "properties": {
          "EnInTeam": {
            "type": "string",
            "description": "\"in team\""
          },
          "EnTeam": {
            "type": "string",
            "description": "\"team\""
          },
          "EnTeamAccess": {
            "type": "string",
            "description": "\"access to team\""
          },
          "EnTeamAdmin": {
            "type": "string",
            "description": "\"team admin\""
          },
          "EnTeamAdmins": {
            "type": "string",
            "description": "\"team admins\""
          },
          "EnTeamGuest": {
            "type": "string",
            "description": "\"team guest\""
          },
          "EnTeamMember": {
            "type": "string",
            "description": "\"team member\""
          },
          "EnTeamMembers": {
            "type": "string",
            "description": "\"team members\""
          },
          "EnTeamOwner": {
            "type": "string",
            "description": "\"team owner\","
          },
          "EnTeamSettings": {
            "type": "string",
            "description": "\"team settings\""
          },
          "EnTeams": {
            "type": "string",
            "description": "\"teams\""
          },
          "EnToTeam": {
            "type": "string",
            "description": "\"to team\""
          },
          "RuInTeam": {
            "type": "string",
            "description": "\"в команде\""
          },
          "RuTeam": {
            "type": "string",
            "description": "\"команда\""
          },
          "RuTeamAccess": {
            "type": "string",
            "description": "\"доступ к команде\""
          },
          "RuTeamAdmin": {
            "type": "string",
            "description": "\"администратор команды\""
          },
          "RuTeamAdmins": {
            "type": "string",
            "description": "\"администраторы команды\""
          },
          "RuTeamD": {
            "type": "string",
            "description": "\"команде\""
          },
          "RuTeamGuest": {
            "type": "string",
            "description": "\"гость команды\""
          },
          "RuTeamMember": {
            "type": "string",
            "description": "\"участник команды\""
          },
          "RuTeamMembers": {
            "type": "string",
            "description": "\"участники команды\""
          },
          "RuTeamOwner": {
            "type": "string",
            "description": "\"владелец команды\""
          },
          "RuTeamP": {
            "type": "string",
            "description": "\"команде\""
          },
          "RuTeamR": {
            "type": "string",
            "description": "\"команды\""
          },
          "RuTeamSettings": {
            "type": "string",
            "description": "\"настройки команды\""
          },
          "RuTeamT": {
            "type": "string",
            "description": "\"командой\""
          },
          "RuTeamV": {
            "type": "string",
            "description": "\"команду\""
          },
          "RuTeams": {
            "type": "string",
            "description": "\"команды\""
          },
          "RuTeamsD": {
            "type": "string",
            "description": "\"командам\""
          },
          "RuTeamsP": {
            "type": "string",
            "description": "\"командах\""
          },
          "RuTeamsR": {
            "type": "string",
            "description": "\"команд\""
          },
          "RuTeamsT": {
            "type": "string",
            "description": "\"командами\""
          },
          "RuTeamsV": {
            "type": "string",
            "description": "\"команды\""
          },
          "RuToTeam": {
            "type": "string",
            "description": "\"в команду\""
          }
        },
        "required": [
          "EnInTeam",
          "EnTeam",
          "EnTeamAccess",
          "EnTeamAdmin",
          "EnTeamAdmins",
          "EnTeamGuest",
          "EnTeamMember",
          "EnTeamMembers",
          "EnTeamOwner",
          "EnTeamSettings",
          "RuTeamSettings",
          "EnTeams",
          "EnToTeam",
          "RuInTeam",
          "RuTeam",
          "RuTeamAccess",
          "RuTeamAdmin",
          "RuTeamAdmins",
          "RuTeamD",
          "RuTeamGuest",
          "RuTeamMember",
          "RuTeamMembers",
          "RuTeamOwner",
          "RuTeamP",
          "RuTeamR",
          "RuTeams",
          "RuTeamsD",
          "RuTeamsP",
          "RuTeamsR",
          "RuTeamsT",
          "RuTeamsV",
          "RuTeamT",
          "RuTeamV",
          "RuToTeam"
        ],
        "description": "Experimental translation fields for \"team\" entity renaming. Readonly"
      },
      "Theme": {
        "type": "object",
        "properties": {
          "AccentColor": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "AccentColor for web"
          },
          "AccentHoverColor": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "AccentHoverColor for web"
          },
          "AppAccentColor": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Deprecated"
          },
          "AppPrimaryColor": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Deprecated"
          },
          "BgColor": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "BgColor for web"
          },
          "BgHoverColor": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "BgHoverColor for web"
          },
          "MainAccent": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "MainAccent for web"
          },
          "MainAccentHover": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "MainAccentHover for web"
          },
          "MainLightAccent": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "MainLightAccent for web"
          },
          "MainLink": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "MainLink for web"
          },
          "MutedTextColor": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "MutedTextColor for web"
          },
          "TextColor": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "TextColor for web"
          },
          "TextOnAccentHoverColor": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "TextOnAccentHoverColor for web"
          },
          "attention": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Attention color for app"
          },
          "attention_light": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Attention light color for app"
          },
          "back": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Back light color for app"
          },
          "back_dark": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Back dark color for app"
          },
          "back_light": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Back light color for app"
          },
          "background": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Background color for app"
          },
          "brand": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Brand color for app"
          },
          "brand_dark": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "BrandDark color for app"
          },
          "brand_light": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Brand light color for app"
          },
          "button": {
            "$ref": "#/components/schemas/ButtonColors",
            "description": "Button colors for app"
          },
          "chat_input_background": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Chat input background color for app"
          },
          "error": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Error color for app"
          },
          "error_light": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Error light color for app"
          },
          "font": {
            "$ref": "#/components/schemas/FontColors",
            "description": "Font colors for app"
          },
          "ic": {
            "$ref": "#/components/schemas/IconColors",
            "description": "Icon colors for app"
          },
          "input": {
            "$ref": "#/components/schemas/InputColors",
            "description": "Input colors for app"
          },
          "message": {
            "$ref": "#/components/schemas/MessageColors",
            "description": "Message colors for app"
          },
          "modal_background": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Modal background color for app"
          },
          "substrate_background": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Substrate background color for app"
          },
          "success": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Success color for app"
          },
          "success_light": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Success light color for app"
          },
          "switcher": {
            "$ref": "#/components/schemas/SwitcherColors",
            "description": "Switcher colors for app"
          },
          "tab_background": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Tab background color for app"
          },
          "title_background": {
            "$ref": "#/components/schemas/RGBColor",
            "description": "Title background color for app"
          }
        },
        "required": [
          "BgColor",
          "BgHoverColor",
          "TextColor",
          "MutedTextColor",
          "AccentColor",
          "AccentHoverColor",
          "TextOnAccentHoverColor",
          "MainAccent",
          "MainAccentHover",
          "MainLightAccent",
          "MainLink",
          "brand",
          "brand_dark",
          "brand_light",
          "back",
          "back_light",
          "back_dark",
          "success",
          "success_light",
          "error",
          "error_light",
          "background",
          "tab_background",
          "chat_input_background",
          "substrate_background",
          "modal_background",
          "title_background",
          "attention",
          "attention_light",
          "font",
          "message",
          "switcher",
          "button",
          "input",
          "ic",
          "AppAccentColor",
          "AppPrimaryColor"
        ],
        "description": "Color theme"
      },
      "UiSettings": {
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "Unread": {
        "type": "object",
        "properties": {
          "chats": {
            "type": "integer",
            "description": "Total chats with unread messages"
          },
          "messages": {
            "type": "integer",
            "description": "Total unread messages"
          },
          "notice_messages": {
            "type": "integer",
            "description": "Total unread messages with mentions"
          }
        },
        "required": [
          "messages",
          "notice_messages",
          "chats"
        ],
        "description": "Unread message counters"
      },
      "Upload": {
        "type": "object",
        "properties": {
          "animated": {
            "type": "boolean",
            "description": "Is animated (images only)"
          },
          "blurhash": {
            "type": "string",
            "description": "Compact representation of a placeholder for an image (images only)"
          },
          "content_type": {
            "type": "string",
            "description": "Content type"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Uploaded at"
          },
          "duration": {
            "type": "integer",
            "description": "Mediafile duration (for audio/video only)"
          },
          "name": {
            "type": "string",
            "description": "Filename"
          },
          "pdf_version": {
            "$ref": "#/components/schemas/PdfVersion",
            "description": "PDF version of file. Experimental"
          },
          "preview": {
            "$ref": "#/components/schemas/UploadPreview",
            "description": "Preview details"
          },
          "processing": {
            "type": "boolean",
            "description": "File still processing (video only)"
          },
          "size": {
            "type": "integer",
            "description": "Upload size in bytes"
          },
          "type": {
            "$ref": "#/components/schemas/UploadMediaType",
            "description": "?type=file,image,audio,video"
          },
          "uid": {
            "type": "string",
            "description": "Upload id"
          },
          "url": {
            "type": "string",
            "description": "Absolute url"
          }
        },
        "required": [
          "uid",
          "created",
          "size",
          "name",
          "url",
          "content_type",
          "type"
        ],
        "description": "Uploaded media"
      },
      "UploadMediaType": {
        "type": "string"
      },
      "UploadPreview": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height in pixels"
          },
          "url": {
            "type": "string",
            "description": "Absolute url to image"
          },
          "url_2x": {
            "type": "string",
            "description": "Absolute url to high resolution image (retina)"
          },
          "width": {
            "type": "integer",
            "description": "Width in pixels"
          }
        },
        "required": [
          "url",
          "url_2x",
          "width",
          "height"
        ],
        "description": "Upload preview"
      },
      "UploadShortMessage": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/ShortMessage",
            "description": "Short message information"
          },
          "upload": {
            "$ref": "#/components/schemas/Upload",
            "description": "Upload information"
          }
        },
        "required": [
          "upload",
          "message"
        ],
        "description": "Upload + ShortMessage"
      },
      "User": {
        "type": "object",
        "properties": {
          "alt_send": {
            "type": "boolean",
            "description": "Use Ctrl/Cmd + Enter instead Enter"
          },
          "always_send_pushes": {
            "type": "boolean",
            "description": "Send pushes even user is online"
          },
          "asterisk_mention": {
            "type": "boolean",
            "description": "Use * as @ for mentions"
          },
          "default_lang": {
            "type": "string",
            "description": "Default language code"
          },
          "email": {
            "type": "string",
            "description": "Email for login"
          },
          "family_name": {
            "type": "string",
            "description": "Family name"
          },
          "given_name": {
            "type": "string",
            "description": "Given name"
          },
          "munread_first": {
            "type": "boolean",
            "description": "Show unread chats in chat list first on mobiles"
          },
          "patronymic": {
            "type": "string",
            "description": "Patronymic, if any"
          },
          "phone": {
            "type": "string",
            "description": "Phone for login"
          },
          "quiet_time_finish": {
            "type": "string",
            "description": "Finish silently time (no pushes, no sounds)"
          },
          "quiet_time_start": {
            "type": "string",
            "description": "Start silently time (no pushes, no sounds)"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone"
          },
          "unread_first": {
            "type": "boolean",
            "description": "Show unread chats in chat list first"
          }
        },
        "required": [
          "alt_send",
          "asterisk_mention",
          "always_send_pushes",
          "unread_first",
          "munread_first",
          "timezone",
          "quiet_time_start",
          "quiet_time_finish"
        ],
        "description": "Account data"
      },
      "UserAuth": {
        "type": "object",
        "properties": {
          "_age": {
            "type": "integer"
          },
          "addr": {
            "type": "string",
            "description": "ip address"
          },
          "country": {
            "type": "string",
            "description": "name of country"
          },
          "created": {
            "type": "string"
          },
          "device": {
            "$ref": "#/components/schemas/PushDevice",
            "description": "info about device (struct)"
          },
          "kind": {
            "type": "string",
            "description": "type of auth"
          },
          "last_access": {
            "type": "string"
          },
          "region": {
            "type": "string",
            "description": "name of region"
          },
          "uid": {
            "type": "string"
          },
          "user_agent": {
            "type": "string",
            "description": "info about useragent"
          }
        },
        "required": [
          "created",
          "uid",
          "kind"
        ]
      },
      "UserWithMe": {
        "type": "object",
        "properties": {
          "alt_send": {
            "type": "boolean",
            "description": "Use Ctrl/Cmd + Enter instead Enter"
          },
          "always_send_pushes": {
            "type": "boolean",
            "description": "Send pushes even user is online"
          },
          "asterisk_mention": {
            "type": "boolean",
            "description": "Use * as @ for mentions"
          },
          "default_lang": {
            "type": "string",
            "description": "Default language code"
          },
          "devices": {
            "$ref": "#/components/schemas/PushDevice",
            "description": "Registered push devices"
          },
          "email": {
            "type": "string",
            "description": "Email for login"
          },
          "family_name": {
            "type": "string",
            "description": "Family name"
          },
          "given_name": {
            "type": "string",
            "description": "Given name"
          },
          "inviter": {
            "$ref": "#/components/schemas/JID",
            "description": "Inviter id, if any"
          },
          "munread_first": {
            "type": "boolean",
            "description": "Show unread chats in chat list first on mobiles"
          },
          "patronymic": {
            "type": "string",
            "description": "Patronymic, if any"
          },
          "phone": {
            "type": "string",
            "description": "Phone for login"
          },
          "quiet_time_finish": {
            "type": "string",
            "description": "Finish silently time (no pushes, no sounds)"
          },
          "quiet_time_start": {
            "type": "string",
            "description": "Start silently time (no pushes, no sounds)"
          },
          "teams": {
            "$ref": "#/components/schemas/Team",
            "description": "Available teams"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone"
          },
          "unread_first": {
            "type": "boolean",
            "description": "Show unread chats in chat list first"
          }
        },
        "required": [
          "teams",
          "devices",
          "alt_send",
          "asterisk_mention",
          "always_send_pushes",
          "unread_first",
          "munread_first",
          "timezone",
          "quiet_time_start",
          "quiet_time_finish"
        ],
        "description": "Accouint data with extra information"
      },
      "Wallpaper": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Unique identifier"
          },
          "name": {
            "type": "string",
            "description": "Localized description"
          },
          "url": {
            "type": "string",
            "description": "Url to jpg or png"
          }
        },
        "required": [
          "key",
          "name",
          "url"
        ],
        "description": "Chat wallpaper"
      },
      "WikiPage": {
        "type": "object",
        "properties": {
          "editor": {
            "$ref": "#/components/schemas/JID",
            "description": "Last editor contact id"
          },
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Object version"
          },
          "text": {
            "type": "string",
            "description": "Page text"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "Update time"
          }
        },
        "required": [
          "gentime",
          "updated",
          "editor",
          "text"
        ],
        "description": "Wiki page. Experimental"
      },
      "clientActivityParams": {
        "type": "object",
        "properties": {
          "afk": {
            "type": "boolean",
            "description": "Is away from keyboard"
          }
        },
        "required": [
          "afk"
        ]
      },
      "clientCallBuzzCancelParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          }
        },
        "required": [
          "jid"
        ]
      },
      "clientCallBuzzParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "members": {
            "$ref": "#/components/schemas/JID",
            "description": "List of call participants. Empty value means all participants in call"
          }
        },
        "required": [
          "jid"
        ],
        "description": "Call buzzing"
      },
      "clientCallLeaveParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "reason": {
            "type": "string",
            "description": "Reason, if any"
          }
        },
        "required": [
          "jid"
        ]
      },
      "clientCallMuteAllParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          }
        },
        "required": [
          "jid"
        ]
      },
      "clientCallOfferParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "muted": {
            "type": "boolean",
            "description": "Mute state"
          },
          "sdp": {
            "type": "string",
            "description": "SDP (session description protocol) data"
          },
          "trickle": {
            "type": "boolean",
            "description": "Is trickle mode enabled"
          }
        },
        "required": [
          "jid",
          "muted",
          "trickle",
          "sdp"
        ]
      },
      "clientCallRejectParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "reason": {
            "type": "string",
            "description": "Reason, if any"
          }
        },
        "required": [
          "jid"
        ]
      },
      "clientCallSoundParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "muted": {
            "type": "boolean",
            "description": "Mute state"
          }
        },
        "required": [
          "jid",
          "muted"
        ]
      },
      "clientCallTrickleParams": {
        "type": "object",
        "properties": {
          "candidate": {
            "type": "string",
            "description": "Trickle candidate"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "sdp_mid": {
            "type": "string",
            "description": "SDP mid"
          },
          "sdp_mline_index": {
            "type": "integer",
            "description": "SDP index"
          }
        },
        "required": [
          "jid",
          "candidate"
        ]
      },
      "clientChatComposingParams": {
        "type": "object",
        "properties": {
          "composing": {
            "type": "boolean",
            "description": "true = start typing / audio recording, false = stop"
          },
          "draft": {
            "type": "string",
            "description": "Message draft data"
          },
          "is_audio": {
            "type": "boolean",
            "description": "true = audiomessage, false = text typing"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          }
        },
        "required": [
          "jid"
        ]
      },
      "clientChatLastreadParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "last_read_message_id": {
            "type": "string",
            "description": "Last read message id. Omitted = last message in chat"
          }
        },
        "required": [
          "jid"
        ]
      },
      "clientConfirmParams": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string",
            "description": "Unique identifier generated by client"
          }
        },
        "required": [
          "confirm_id"
        ]
      },
      "clientMessageDeletedParams": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "description": "Message id"
          }
        }
      },
      "serverCallAnswerCandidate": {
        "type": "object",
        "properties": {
          "candidate": {
            "type": "string"
          },
          "sdpMLineIndex": {
            "type": "integer"
          }
        },
        "required": [
          "candidate",
          "sdpMLineIndex"
        ]
      },
      "serverCallAnswerParams": {
        "type": "object",
        "properties": {
          "candidates": {
            "$ref": "#/components/schemas/serverCallAnswerCandidate",
            "description": "List of ICE candidates (when trickle = false)"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "jsep": {
            "$ref": "#/components/schemas/JSEP",
            "description": "SDP data"
          },
          "onliners": {
            "$ref": "#/components/schemas/CallOnliner",
            "description": "Current call participants"
          },
          "uid": {
            "type": "string",
            "description": "Call id"
          }
        },
        "required": [
          "jid",
          "jsep",
          "uid"
        ]
      },
      "serverCallBuzzParams": {
        "type": "object",
        "properties": {
          "actor": {
            "$ref": "#/components/schemas/ContactShort",
            "description": "Short call creator information"
          },
          "buzz_timeout": {
            "type": "integer",
            "description": "Number of seconds for stop buzzing"
          },
          "chat": {
            "$ref": "#/components/schemas/ChatShort",
            "description": "Short chat information"
          },
          "display_name": {
            "type": "string",
            "description": "Chat title"
          },
          "icons": {
            "$ref": "#/components/schemas/IconData",
            "description": "Chat icons"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "team": {
            "type": "string",
            "description": "Deprecated"
          },
          "teaminfo": {
            "$ref": "#/components/schemas/TeamShort",
            "description": "Short team information"
          },
          "uid": {
            "type": "string",
            "description": "Call id"
          }
        },
        "required": [
          "jid",
          "icons",
          "display_name",
          "teaminfo",
          "chat",
          "actor",
          "uid",
          "buzz_timeout",
          "team"
        ]
      },
      "serverCallBuzzcancelParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "team": {
            "type": "string",
            "description": "Team id"
          },
          "uid": {
            "type": "string",
            "description": "Call id"
          }
        },
        "required": [
          "jid",
          "team",
          "uid"
        ]
      },
      "serverCallCheckFingerprintParams": {
        "type": "object",
        "properties": {
          "fingerprint": {
            "type": "string"
          }
        },
        "required": [
          "fingerprint"
        ]
      },
      "serverCallLeaveParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "uid": {
            "type": "string",
            "description": "Call uid"
          }
        },
        "required": [
          "jid",
          "uid"
        ]
      },
      "serverCallMuteallParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "muted": {
            "type": "boolean",
            "description": "Mute state"
          }
        },
        "required": [
          "jid",
          "muted"
        ]
      },
      "serverCallRejectParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "reason": {
            "type": "string",
            "description": "Reason, if any"
          },
          "uid": {
            "type": "string",
            "description": "Call id"
          }
        },
        "required": [
          "jid",
          "uid",
          "reason"
        ]
      },
      "serverCallRestartParams": {
        "type": "object",
        "properties": {
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "team": {
            "type": "string",
            "description": "Team id"
          },
          "uid": {
            "type": "string",
            "description": "Call id"
          }
        },
        "required": [
          "jid",
          "uid",
          "team"
        ]
      },
      "serverCallTalkingParams": {
        "type": "object",
        "properties": {
          "actor": {
            "$ref": "#/components/schemas/JID",
            "description": "Actor id"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "talking": {
            "type": "boolean",
            "description": "Is talking"
          }
        },
        "required": [
          "jid",
          "actor",
          "talking"
        ]
      },
      "serverChatComposingParams": {
        "type": "object",
        "properties": {
          "actor": {
            "$ref": "#/components/schemas/JID",
            "description": "Actor id"
          },
          "composing": {
            "type": "boolean",
            "description": "true = start typing / audio recording, false = stop"
          },
          "is_audio": {
            "type": "boolean",
            "description": "true = audiomessage, false = text typing"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          },
          "valid_until": {
            "type": "string",
            "format": "date-time",
            "description": "Composing event max lifetime"
          }
        },
        "required": [
          "jid",
          "actor",
          "composing"
        ]
      },
      "serverChatDeletedParams": {
        "type": "object",
        "properties": {
          "badge": {
            "type": "integer",
            "description": "Total number of unreads"
          },
          "chats": {
            "$ref": "#/components/schemas/DeletedChat",
            "description": "List of deleted chats"
          },
          "team_unread": {
            "$ref": "#/components/schemas/TeamUnread",
            "description": "Current team counters"
          }
        },
        "required": [
          "chats",
          "team_unread",
          "badge"
        ]
      },
      "serverChatDraftParams": {
        "type": "object",
        "properties": {
          "draft": {
            "type": "string",
            "description": "Draft text"
          },
          "draft_num": {
            "type": "integer",
            "format": "int64",
            "description": "Draft version. TODO: use gentime instead"
          },
          "jid": {
            "$ref": "#/components/schemas/JID",
            "description": "Chat or contact id"
          }
        },
        "required": [
          "jid",
          "draft",
          "draft_num"
        ]
      },
      "serverChatLastreadParams": {
        "type": "object",
        "properties": {
          "badge": {
            "type": "integer",
            "description": "Total number of unreads"
          },
          "chats": {
            "$ref": "#/components/schemas/ChatCounters",
            "description": "Chat counters"
          },
          "team_unread": {
            "$ref": "#/components/schemas/TeamUnread",
            "description": "Current team counters"
          }
        },
        "required": [
          "chats",
          "team_unread",
          "badge"
        ]
      },
      "serverChatUpdatedParams": {
        "type": "object",
        "properties": {
          "badge": {
            "type": "integer",
            "description": "Total number of unreads"
          },
          "chats": {
            "$ref": "#/components/schemas/Chat",
            "description": "Chat counters"
          },
          "team_unread": {
            "$ref": "#/components/schemas/TeamUnread",
            "description": "Current team counters"
          }
        },
        "required": [
          "chats",
          "team_unread",
          "badge"
        ]
      },
      "serverConfirmParams": {
        "type": "object",
        "properties": {
          "confirm_id": {
            "type": "string",
            "description": "Unique id generated by server"
          }
        },
        "required": [
          "confirm_id"
        ]
      },
      "serverContactUpdatedParams": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components/schemas/Contact",
            "description": "Contact info"
          }
        },
        "required": [
          "contacts"
        ]
      },
      "serverDebugParams": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Debug message"
          }
        },
        "required": [
          "text"
        ]
      },
      "serverLoginParams": {
        "type": "object",
        "properties": {
          "device_name": {
            "type": "string",
            "description": "Device name"
          }
        },
        "required": [
          "device_name"
        ]
      },
      "serverMessageReceivedParams": {
        "type": "object",
        "properties": {
          "messages": {
            "$ref": "#/components/schemas/ReceivedMessage",
            "description": "received message data"
          }
        },
        "required": [
          "messages"
        ]
      },
      "serverMessageUpdatedParams": {
        "type": "object",
        "properties": {
          "badge": {
            "type": "integer",
            "description": "Total number of unreads, if changed"
          },
          "chat_counters": {
            "$ref": "#/components/schemas/ChatCounters",
            "description": "Chat counters"
          },
          "delayed": {
            "type": "boolean",
            "description": "true = silently message update, false = new message"
          },
          "messages": {
            "$ref": "#/components/schemas/Message",
            "description": "Messages data"
          },
          "team_unread": {
            "$ref": "#/components/schemas/TeamUnread",
            "description": "Current team counters"
          }
        },
        "required": [
          "messages",
          "delayed",
          "chat_counters",
          "team_unread",
          "badge"
        ]
      },
      "serverOnlineParams": {
        "type": "object",
        "properties": {
          "calls": {
            "$ref": "#/components/schemas/OnlineCall",
            "description": "Active calls"
          },
          "contacts": {
            "$ref": "#/components/schemas/OnlineContact",
            "description": "Online team members"
          }
        },
        "required": [
          "contacts"
        ]
      },
      "serverPanicParams": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "debug": {
            "type": "string",
            "description": "Debug message"
          }
        },
        "required": [
          "code"
        ]
      },
      "serverProcessingParams": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action name"
          },
          "has_error": {
            "type": "boolean",
            "description": "Has error"
          },
          "message": {
            "type": "string",
            "description": "Message"
          },
          "num": {
            "type": "integer",
            "description": "Current processing item"
          },
          "total": {
            "type": "integer",
            "description": "Total processing items"
          }
        },
        "required": [
          "action",
          "message",
          "has_error",
          "num",
          "total"
        ]
      },
      "serverRemindDeletedParams": {
        "type": "object",
        "properties": {
          "reminds": {
            "$ref": "#/components/schemas/DeletedRemind",
            "description": "Remind information"
          }
        },
        "required": [
          "reminds"
        ]
      },
      "serverRemindFiredParams": {
        "type": "object",
        "properties": {
          "reminds": {
            "$ref": "#/components/schemas/Remind",
            "description": "Remind information"
          }
        },
        "required": [
          "reminds"
        ]
      },
      "serverRemindUpdatedParams": {
        "type": "object",
        "properties": {
          "reminds": {
            "$ref": "#/components/schemas/Remind",
            "description": "Remind information"
          }
        },
        "required": [
          "reminds"
        ]
      },
      "serverSectionDeletedParams": {
        "type": "object",
        "properties": {
          "chat_type": {
            "$ref": "#/components/schemas/ChatType",
            "description": "Chat type"
          },
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "Deprecated"
          },
          "sections": {
            "$ref": "#/components/schemas/DeletedSection",
            "description": "Section/project info"
          }
        },
        "required": [
          "chat_type",
          "sections",
          "gentime"
        ]
      },
      "serverSectionUpdatedParams": {
        "type": "object",
        "properties": {
          "chat_type": {
            "$ref": "#/components/schemas/ChatType",
            "description": "Chat type"
          },
          "gentime": {
            "type": "integer",
            "format": "int64",
            "description": "deprecated"
          },
          "sections": {
            "$ref": "#/components/schemas/Section",
            "description": "Section/project info"
          }
        },
        "required": [
          "chat_type",
          "sections",
          "gentime"
        ]
      },
      "serverTagDeletedParams": {
        "type": "object",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/DeletedTag",
            "description": "Tags info"
          }
        },
        "required": [
          "tags"
        ]
      },
      "serverTagUpdatedParams": {
        "type": "object",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/Tag",
            "description": "Tags info"
          }
        },
        "required": [
          "tags"
        ]
      },
      "serverTeamCountersParams": {
        "type": "object",
        "properties": {
          "badge": {
            "type": "integer",
            "description": "Total number of unreads"
          },
          "teams": {
            "$ref": "#/components/schemas/TeamCounter",
            "description": "Counters"
          }
        },
        "required": [
          "teams",
          "badge"
        ]
      },
      "serverTeamDeletedParams": {
        "type": "object",
        "properties": {
          "teams": {
            "$ref": "#/components/schemas/DeletedTeam",
            "description": "Teams info"
          }
        },
        "required": [
          "teams"
        ]
      },
      "serverTeamUpdatedParams": {
        "type": "object",
        "properties": {
          "teams": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "required": [
          "teams"
        ]
      },
      "serverTimeParams": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "Current time"
          }
        },
        "required": [
          "time"
        ]
      },
      "serverUploadUpdatedParams": {
        "type": "object",
        "properties": {
          "uploads": {
            "$ref": "#/components/schemas/Upload",
            "description": "Uploads data"
          }
        },
        "required": [
          "uploads"
        ]
      },
      "serverWarningParams": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message"
          },
          "orig": {
            "type": "object",
            "description": "Debug information"
          }
        },
        "required": [
          "message",
          "orig"
        ]
      }
    },
    "securitySchemes": {
      "token": {
        "type": "apiKey",
        "name": "token",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "token": []
    }
  ]
}
